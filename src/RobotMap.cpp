// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
CANTalon* RobotMap::driveSubsystemmotorControllerFrontLeft = NULL;
CANTalon* RobotMap::driveSubsystemmotorControlleFrontRight = NULL;
CANTalon* RobotMap::driveSubsystemmotorControllerBackLeft = NULL;
CANTalon* RobotMap::driveSubsystemmotorControllerBackRight = NULL;
RobotDrive* RobotMap::robotDrive = NULL;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	//LiveWindow* lw = LiveWindow::GetInstance();

	driveSubsystemmotorControllerFrontLeft = new CANTalon(0);
	//lw->AddActuator("DriveSubsystem", "motorControllerFrontLeft", (CANTalon*) driveSubsystemmotorControllerFrontLeft);
	
	//driveSubsystemmotorControlleFrontRight = new CANTalon(1);
	//lw->AddActuator("DriveSubsystem", "motorControlleFrontRight", (CANTalon*) driveSubsystemmotorControlleFrontRight);
	
	driveSubsystemmotorControllerBackLeft = new CANTalon(2);
	//lw->AddActuator("DriveSubsystem", "motorControllerBackLeft", (CANTalon*) driveSubsystemmotorControllerBackLeft);
	
	driveSubsystemmotorControllerBackRight = new CANTalon(3);
	//lw->AddActuator("DriveSubsystem", "motorControllerBackRight", (CANTalon*) driveSubsystemmotorControllerBackRight);

	robotDrive = new RobotDrive(driveSubsystemmotorControllerFrontLeft, driveSubsystemmotorControllerBackLeft,
              NULL, driveSubsystemmotorControllerBackRight);
	
	robotDrive->SetSafetyEnabled(false);
        robotDrive->SetExpiration(0.1);
        robotDrive->SetSensitivity(0.5);
        robotDrive->SetMaxOutput(1.0);
        robotDrive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        robotDrive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
